<html>
<head>
<SCRIPT language="Javascript">

var DocRemote = 0;

function makeRemote(){

	if(DocRemote){
		if(DocRemote.closed){
			DocRemote = 0;
			makeRemote();
		}else{
			DocRemote.focus();
		}
	}else{
		DocRemote = window.open('../../search.cfm', 
					    'Search', 
					    'scrollbars,resizable,width=510,height=300');
    	}
}

</SCRIPT>
<script language="JavaScript">
<!--Hide JavaScript

   if (navigator.appName == "Netscape"){
      document.write('<LINK REL=STYLESHEET HREF="../../allaire_ns.css" TYPE="text/css">');
      }
   else{
      document.write('<LINK REL=STYLESHEET HREF="../../allaire_ie.css" TYPE="text/css">');
   }
//-->
</script>
<title>CFLOCK</title>
</head>
<body>

<div class="navigation">
<table>
<tr valign="bottom">
<td width="90%" align="left" valign="bottom" nowrap><em>CFML Language Reference</em>
</td>
<td align="right" width="10%" valign="bottom" nowrap>
<a href="../2_ColdFusion_Tags/lr2_057.htm"><IMG alt="Previous" border="0" height="16" src="../../images/icons/back.gif" width="16"></a>
<a href="../2_ColdFusion_Tags/lr2.htm"><IMG alt="Up One Level" border="0" height="16" src="../../images/icons/uplevel.gif" width="16"></A>
<a href="../2_ColdFusion_Tags/lr2_059.htm"><IMG alt="Next" border="0" height="16" src="../../images/icons/next.gif" width="16"></a>
<a href="../../dochome.htm"><IMG alt="" border="0" height="16" src="../../images/icons/home.gif" width="16"></a>
<a href="javascript: makeRemote();"><IMG alt="Search" border="0" height="16" src="../../images/icons/search.gif" width="16"></a>
</td>
</tr>
<tr align="left" valign="top">
<td colspan="2">
<hr>
<b>Chapter 1	:&nbsp;&nbsp;ColdFusion Tags</b>
</td>
</tr>
</table>
</div>
<br>
<br>

<br>
<a name="1970785"></a>
 <H1>CFLOCK</H1>



<p>The CFLOCK tag provides two types of locks to ensure the integrity of shared data:</p><ul>
<a name="1970787"> </a>
<li>exclusive lock

<a name="1970788"> </a>
</li>
<li>read-only lock
</li>
</ul>
<p>An exclusive lock single-threads access to the CFML constructs in its body. Single-threaded access implies that the body of the tag can be executed by at most one request at a time. A request executing inside a CFLOCK tag has an "exclusive lock" on the tag. No other requests are allowed to start executing inside the tag while a request has an exclusive lock. ColdFusion issues exclusive locks on a first-come, first-served basis.</p><p>A read-only lock allows multiple requests to access the CFML constructs inside its body concurrently. Therefore, read-only locks should only be used when the shared data will only be read and not modified. If another request already has an exclusive lock on the shared data, the request will wait for the exclusive lock to be released before it can obtain it.</p><a name="1970791"></a>
 
<H3>Syntax</H3>
<PRE>&lt;CFLOCK 
    TIMEOUT="timeout in seconds "
    SCOPE="Application" or "Server" or "Session"
    NAME="lockname" 
    THROWONTIMEOUT="Yes/No"
    TYPE= "ReadOnly/Exclusive "&gt; 
    &lt;!--- CFML to be synchronized ---&gt; 
&lt;/CFLOCK&gt;
</PRE><a name="1970796"></a>
<h4> TIMEOUT</h4>
<p>Required. Specifies the maximum amount of time in seconds to wait to obtain an lock. If a lock can be obtained within the specified period, execution will continue inside the body of the tag. Otherwise, the behavior depends on the value of the <em>THROWONTIMEOUT</em> attribute.</p><a name="2255930"></a>
<h4> SCOPE</h4>
<p>Optional. Specifies the scope as one of the following: Application, Server, or Session. This attribute is mutually exclusive with the <em>NAME</em> attribute. See the Scope section for valuable information.</p><a name="2243428"></a>
<h4> NAME</h4>
<p>Optional. Specifies the name of the lock. Only one request will be able to execute inside a CFLOCK tag with a given name. Therefore, providing the <em>NAME</em> attribute allows for synchronizing access to the same resources from different parts of an application. Lock names are global to a ColdFusion server. They are shared between applications and user sessions, but not across clustered servers. This attribute is mutually exclusive with the <em>SCOPE</em> attribute. Therefore, do not specify the <em>SCOPE</em> attribute and the <em>NAME</em> attribute in the same tag. Note that the value of <em>NAME</em> cannot be an empty string.</p><a name="1970798"></a>
<h4> THROWONTIMEOUT</h4>
<p>Optional. Yes or No. Specifies how timeout conditions should be handled. If the value is Yes an exception will be generated to provide notification of the timeout. If the value is No execution continues past the &lt;/CFLOCK&gt; tag. Default is Yes.</p><a name="1970800"></a>
<h4> TYPE</h4>
<p>Optional. ReadOnly or Exclusive. Specifies the type of lock: read-only or exclusive. Default is Exclusive. A read-only lock allows more than one request to read shared data. An exclusive lock allows only one request to read or write to shared data. See the following Note.</p><div>
<table>
<tr valign="top">
<td width="30"><strong>Note	</strong></td>
<td>Limit the scope of code that updates shared data. Exclusive locks are 
required to ensure the integrity of these updates, but they have a 
significant impact on performance. Read-only locks are faster. If you 
have a performance-sensitive application, you should substitute read-
only locks for exclusive locks wherever it is possible, for example, when 
reading shared data.
</td>
</tr>
</table>
</div>
<br><a name="1970804"></a>
 
<H3>Usage</H3>
<p>ColdFusion Server is a multi-threaded web application server that can process multiple page requests at any given time. Use CFLOCK to guarantee that multiple concurrently executing requests do not manipulate shared data structures, files, or CFXs in an inconsistent manner. Note the following:</p><ul>
<a name="1970806"> </a>
<li>Using CFLOCK around CFML constructs that modify shared data ensures that the modifications occur one after the other and not all at the same time. 

<a name="1970825"> </a>
</li>
<li>Using CFLOCK around file manipulation constructs can guarantee that file updates do not fail due to files being open for writing by other applications or ColdFusion tags.
<a name="1970826"> </a>
</li>
<li>Using CFLOCK around CFX invocations can guarantee that CFXs that are not implemented in a thread-safe manner can be safely invoked by ColdFusion. This usually only applies to CFXs developed in C++ using the CFAPI. Any C++ CFX that maintains and manipulates shared (global) data structures will have to be made thread-safe to safely work with ColdFusion. However, writing thread-safe C++ CFXs requires advanced knowledge. A CFML custom tag wrapper can be used around the CFX to make its invocation thread-safe.
</li>
</ul>
<a name="2248571"></a>
 
<H3>Scope</H3>
<p>Whenever you display, set, or update variables, in one of the shared scopes, use the <em>SCOPE</em> attribute to identify the scope as Server, Application or Session.</p><p>Within the ColdFusion Administrator, the Locking page, under the Server section, allows you to set different characteristics of the locking schema according to scope.The following table shows which features are available for Server, Application, and Session scope.<div> 
<table border="1" cellpadding="3" cellspacing="0">
<caption></caption>
<tr valign="top"><th align="left">
<strong>Features</strong>
</th><th align="left">
<strong>Server</strong>
</th><th align="left">
<strong>Application</strong>
</th><th align="left">
<strong>Session</strong>
</th></tr>
<tr valign="top"><td valign="top">
No automatic checking or locking
</td><td valign="top">
Yes
</td><td valign="top">
Yes
</td><td valign="top">
Yes
</td></tr>
<tr valign="top"><td valign="top">
Full checking
</td><td valign="top">
Yes
</td><td valign="top">
Yes
</td><td valign="top">
Yes
</td></tr>
<tr valign="top"><td valign="top">
Automatic read locking
</td><td valign="top">
Yes
</td><td valign="top">
Yes
</td><td valign="top">
Yes
</td></tr>
<tr valign="top"><td valign="top">
Single Threaded Sessions
</td><td valign="top">
&nbsp;
</td><td valign="top">
&nbsp;
</td><td valign="top">
Yes
</td></tr>

</table>
</div>
</p><p><strong>Each feature that you select has tradeoffs. </strong></p><ul>
<a name="2279407"> </a>
<li>No automatic checking or locking. If you select this button, no reads or writes are locked or checked for correct protection. You should select this only after you have run with full checking and know that there are no errors to handle and that all locking is handled programmatically. Selecting this button provides the fastest performance.

<a name="2279414"> </a>
</li>
<li>Full checking. If you select this button, all unlocked accesses will be detected. You should select this when you are in debug mode. Selecting this button slows performance.
<a name="2279415"> </a>
</li>
<li>Automatic read locking. If you select this button, all reads are locked and unlocked writes cause an error. Selecting this button also slows down performance considerably.
<a name="2279961"> </a>
</li>
<li>Single-threaded sessions: If you select this button, the whole request has to finish before another request for the same session is processed. Selecting this button may have an effect on performance depending on the request pattern. For example, the total response time may increase if an application has multiple frames that can be refreshed at once, thus causing multiple requests to have to queue up and wait to be processed.
</li>
</ul>
<p>For an analysis of best practices with respect to locking, please refer to <a href="../../Administering_ColdFusion_Server/contents.htm"><em>Administering ColdFusion Server</em>.</p><a name="1970828"></a>
 
<H3>Deadlocks</H3>
<p>CFLOCK uses kernel level synchronization objects that are released automatically upon timeout and/or abnormal termination of the thread that owns them. Therefore, ColdFusion will never deadlock for an infinite period of time while processing a CFLOCK tag. However, very large timeouts can block request threads for long periods of time and thus radically decrease throughput. Always use the minimum timeout value allowed.</p><p>Another cause of blocked request threads is inconsistent nesting of CFLOCK tags and inconsistent naming of locks. If you are nesting locks, you and everyone accessing the locked variables must consistently nest CFLOCK tags in the same order . If everyone accessing locked variables does not adhere to these conventions, a deadlock can occur. A deadlock is a state in which no request can execute the locked section of the page. Thus, all requests to the protected section of the page are blocked until there is a timeout. The following tables show two scenarios that cause deadlocks.<div> 
<table border="1" cellpadding="3" cellspacing="0">
<caption></caption>
<tr valign="top"><th colspan=2 rowspan=1>
<strong>Deadlock Scenario&nbsp; with Two Users</strong>
</th></tr>
<tr valign="top"><th align="left">
<strong>User 1</strong>
</th><th align="left">
<strong>User 2</strong>
</th></tr>
<tr valign="top"><td valign="top">
Locks the session scope .
</td><td valign="top">
Locks the application scope.
</td></tr>
<tr valign="top"><td valign="top">
<strong>Deadlock: </strong>Tries to lock application scope, but application scope already is locked by User 2.
</td><td valign="top">
<strong>Deadlock: </strong>Tries to lock the session scope, but session scope already is locked by User 1.
</td></tr>

</table>
</div>
</p><p><div> 
<table border="1" cellpadding="3" cellspacing="0">
<caption></caption>
<tr valign="top"><th align="left">
<strong>Deadlock Scenario&nbsp;With One User</strong>
</th></tr>
<tr valign="top"><th align="left">
<strong>User 1</strong>
</th></tr>
<tr valign="top"><td valign="top">
Locks the session scope with a read lock.
</td></tr>
<tr valign="top"><td valign="top">
Attempts to lock the session scope with an exclusive lock. 
</td></tr>
<tr valign="top"><td valign="top">
<strong>Deadlock: </strong>Attempts to lock the session scope with an exclusive lock, but cannot because the scope is already locked for reading.
</td></tr>

</table>
</div>
The following deadlock scenario could take place if you tried to nest a write lock after a read lock, as in the following code:</p><pre>&lt;CFLOCK TIMEOUT="60" SCOPE="SESSION" TYPE="ReadOnly"&gt;
    ...............
    &lt;CFLOCK TIMEOUT="60" SCOPE="SESSION" TYPE="Exclusive"&gt;
    .........
    &lt;/CFLOCK&gt;
&lt;/CFLOCK&gt;
</pre><p>Once a deadlock occurs neither of the users can do anything to break the deadlock, because the execution of their requests is blocked until the deadlock can be resolved by a lock timeout.</p><p>In order to avoid a deadlock, you and all who need to nest locks should do so in a well-specified order and name the locks consistently. In particular, if you need to lock access to the server, application, and session scopes, you must do so in the following order. </p><p>
1.	 Lock the session scope. In the CFLOCK tag, indicate the scope by specifying "SESSION" as the value of the SCOPE attribute.
</p>

<p>
2.	 Lock the application scope. In the CFLOCK tag, indicate scope by specifying "APPLICATION" as the value of the SCOPE attribute.
</p>

<p>
3.	 Lock the server scope. In the CFLOCK tag, indicate the scope by specifying "SERVER" as the value of the SCOPE attribute.
</p>

<p>
4.	 Unlock the server scope.
</p>

<p>
5.	 Unlock the application scope.
</p>

<p>
6.	 Unlock the session scope.
</p>

<div>
<table>
<tr valign="top">
<td width="30"><strong>Note	</strong></td>
<td>You can take out any pair of lock/unlock steps if you do not need to lock a 
particular scope. For example, you can take out Steps 3 and 4 if you do 
not need to lock the server scope. Similar rules apply for named locks.
</td>
</tr>
</table>
</div>
<br><p>For complete usage information on CFLOCK, see <a href="../../Developing_Web_Applications_with_ColdFusion/contents.htm"><em>Developing Web Applications with ColdFusion</em></a>.</p><a name="2043166"></a>
 
<H3>Example</H3>
<FORM ACTION="../../tagframe.cfm" TARGET="runcftag">
<INPUT TYPE="Hidden" NAME="tagname" VALUE="cflock
">
<INPUT TYPE="Submit" VALUE="Example">
</FORM><pre>&lt;!------------------------------------------------------------- 
    This example shows how CFLOCK can be used to guarantee the
    consistency of data updates to variables in the Application, 
    Server, and Session scopes.
    You should copy the following code into an Application.cfm
    file in the snippets directory. 
---------------------------------------------------------------&gt;
    &lt;HTML&gt;
    &lt;HEAD&gt;
        &lt;TITLE&gt;Define Session and Application Variables&lt;/TITLE&gt;
    &lt;/HEAD&gt;
    
    &lt;BASEFONT FACE="Arial, Helvetica" SIZE=2&gt;
    &lt;BODY  bgcolor="#FFFFD5"&gt;
    
    &lt;H3&gt;CFAPPLICATION Example&lt;/H3&gt;
    
    &lt;P&gt;CFAPPLICATION defines scoping for a ColdFusion application and 
    enables or disables the storing of application and/or session
    variables. This tag is placed in a special file called
    Application.cfm that is run before any other CF template in a
    directory where the Application.cfm file appears.&lt;/P&gt;
    
    &lt;CFAPPLICATION NAME="ETurtle" SESSIONTIMEOUT=#CreateTimeSpan(0, 0, 
      0, 60)# SESSIONMANAGEMENT="yes"&gt;

&lt;!---------------------------------------------------------------------- 
    Initialize the session and application variables that will be 
    used by E-Turtleneck. Use the session scope for the session 
    variables. 
-----------------------------------------------------------------------&gt; 
    &lt;CFLOCK SCOPE="Session" TIMEOUT="30" TYPE="Exclusive"&gt;
        &lt;CFIF NOT IsDefined("session.size")&gt;
            &lt;CFSET session.size = ""&gt;
        &lt;/CFIF&gt;
        &lt;CFIF NOT IsDefined("session.color")&gt;
            &lt;CFSET session.color = ""&gt;
        &lt;/CFIF&gt;
    &lt;/CFLOCK&gt;

&lt;!--------------------------------------------------------------------- 
    Use the application lock for the application variable. This
    variable keeps track of the total number of turtlenecks sold. The
    application lock should have the same name as specified in the 
    CFAPPLICATION tag. 
-----------------------------------------------------------------------&gt;
    &lt;CFLOCK SCOPE="Application" Timeout="30" Type="Exclusive"&gt;
        &lt;CFIF NOT IsDefined("application.number")&gt;
            &lt;CFSET application.number = 1&gt;
        &lt;/CFIF&gt;
    &lt;/CFLOCK&gt;
    &lt;CFLOCK SCOPE="Application" TIMEOUT="30" TYPE="ReadOnly"&gt;
        &lt;CFOUTPUT&gt;
        E-Turtleneck is proud to say that we have sold
        #application.number# turtlenecks to date.
        &lt;/CFOUTPUT&gt;
    &lt;/CFLOCK&gt;
&lt;!----------------------------------------------------------------------
    End of Application.cfm 
------------------------------------------------------------------------
&gt;     
&lt;HEAD&gt;
&lt;TITLE&gt;
CFLOCK Example
&lt;/TITLE&gt;
&lt;/HEAD&gt;

&lt;BASEFONT FACE="Arial, Helvetica" SIZE=2&gt;
&lt;BODY  bgcolor="#FFFFD5"&gt;

&lt;H3&gt;CFLOCK Example&lt;/H3&gt;

&lt;CFIF IsDefined("form.submit")&gt;
    &lt;CFOUTPUT&gt;
        Thank you for shopping E-Turtleneck. Today you have
        chosen a turtleneck in size &lt;b&gt;#form.size#&lt;/b&gt; and in the color
        &lt;b&gt;#form.color#&lt;/b&gt;. 
    &lt;/CFOUTPUT&gt;
    
    &lt;!----------------------------------------------------------------- 
     Lock session variables to assign form values to them. 
    -------------------------------------------------------------------&gt; 
    &lt;CFLOCK SCOPE="Session" TIMEOUT="30" TYPE="Exclusive"&gt;
        &lt;CFPARAM NAME=session.size Default=#form.size#&gt;
        &lt;CFPARAM NAME=session.color Default=#form.color#&gt;
    &lt;/CFLOCK&gt;
    &lt;!------------------------------------------------------------------ 
    Lock application variable application.number to find the total number 
    of turtlenecks sold. 
    -------------------------------------------------------------------&gt; 
    &lt;CFLOCK SCOPE="Application" TIMEOUT="30" TYPE="Exclusive"&gt;
        &lt;CFSET application.number = application.number + 1&gt;
    &lt;/CFLOCK&gt;
    
&lt;CFELSE&gt;&lt;!--- Show the form only if it has not been submitted. ---&gt;

&lt;FORM ACTION="cflock.cfm" METHOD="POST"&gt;

&lt;P&gt;Congratulations! You have just selected the longest wearing, most 
comfortable turtleneck in the world. Please indicate the color and size 
that you wish to buy.&lt;/P&gt; 
&lt;table cellspacing="2" cellpadding="2" border="0"&gt;
&lt;tr&gt;
    &lt;td&gt;Select a color.&lt;/td&gt;
    &lt;td&gt;&lt;SELECT TYPE="Text" NAME="color"&gt;
        &lt;OPTION&gt;red
        &lt;OPTION&gt;white
        &lt;OPTION&gt;blue
        &lt;OPTION&gt;turquoise
        &lt;OPTION&gt;black
        &lt;OPTION&gt;forest green
        &lt;/SELECT&gt;
    &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
    &lt;td&gt;Select a size.&lt;/td&gt;
    &lt;td&gt;&lt;SELECT TYPE="Text" NAME="size" &gt;
        &lt;OPTION&gt;XXsmall
        &lt;OPTION&gt;Xsmall
        &lt;OPTION&gt;small
        &lt;OPTION&gt;medium
        &lt;OPTION&gt;large
        &lt;OPTION&gt;Xlarge
        &lt;/SELECT&gt;
    &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
    &lt;td&gt;Press Submit when you are finished making your selection.&lt;/td&gt;
    &lt;td&gt;&lt;INPUT TYPE="Submit" NAME="submit" VALUE="Submit"&gt; 
    &lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
&lt;/FORM&gt;
&lt;/CFIF&gt;
&lt;/HTML&gt;
</pre><FORM ACTION="../../tagframe.cfm" TARGET="runcftag">
<INPUT TYPE="Hidden" NAME="tagname" VALUE="cflock
">
<INPUT TYPE="Submit" VALUE="Example">
</FORM>
<br>

<div class="navigation">
<table>
<tr valign="bottom">
<td class="copy" width="90%" align="left" valign="bottom" nowrap>
Copyright &#169; 1999, Allaire Corporation. All rights reserved.
</td>
<td align="right" width="10%" valign="bottom" nowrap>
<a href="../2_ColdFusion_Tags/lr2_057.htm"><IMG alt="Previous" border="0" height="16" src="../../images/icons/back.gif" width="16"></a>
<a href="../2_ColdFusion_Tags/lr2.htm"><IMG alt="Up" border="0" height="16" src="../../images/icons/uplevel.gif" width="16"></A>
<a href="../2_ColdFusion_Tags/lr2_059.htm"><IMG alt="Next" border="0" height="16" src="../../images/icons/next.gif" width="16"></a>
<a href="../../dochome.htm"><IMG alt="Home" border="0" height="16" src="../../images/icons/home.gif" width="16"></a>
<a href="javascript: makeRemote();"><IMG alt="Search" border="0" height="16" src="../../images/icons/search.gif" width="16"></a>
</td>
</tr>
</table>
</div>
<!-- Last updated: 10/29/99 10:39:45 -->
</body>
</html>