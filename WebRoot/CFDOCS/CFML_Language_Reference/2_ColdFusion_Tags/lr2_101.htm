<html>
<head>
<SCRIPT language="Javascript">

var DocRemote = 0;

function makeRemote(){

	if(DocRemote){
		if(DocRemote.closed){
			DocRemote = 0;
			makeRemote();
		}else{
			DocRemote.focus();
		}
	}else{
		DocRemote = window.open('../../search.cfm', 
					    'Search', 
					    'scrollbars,resizable,width=510,height=300');
    	}
}

</SCRIPT>
<script language="JavaScript">
<!--Hide JavaScript

   if (navigator.appName == "Netscape"){
      document.write('<LINK REL=STYLESHEET HREF="../../allaire_ns.css" TYPE="text/css">');
      }
   else{
      document.write('<LINK REL=STYLESHEET HREF="../../allaire_ie.css" TYPE="text/css">');
   }
//-->
</script>
<title>CFTRY&#32;CFCATCH</title>
</head>
<body>

<div class="navigation">
<table>
<tr valign="bottom">
<td width="90%" align="left" valign="bottom" nowrap><em>CFML Language Reference</em>
</td>
<td align="right" width="10%" valign="bottom" nowrap>
<a href="../2_ColdFusion_Tags/lr2_100.htm"><IMG alt="Previous" border="0" height="16" src="../../images/icons/back.gif" width="16"></a>
<a href="../2_ColdFusion_Tags/lr2.htm"><IMG alt="Up One Level" border="0" height="16" src="../../images/icons/uplevel.gif" width="16"></A>
<a href="../2_ColdFusion_Tags/lr2_102.htm"><IMG alt="Next" border="0" height="16" src="../../images/icons/next.gif" width="16"></a>
<a href="../../dochome.htm"><IMG alt="" border="0" height="16" src="../../images/icons/home.gif" width="16"></a>
<a href="javascript: makeRemote();"><IMG alt="Search" border="0" height="16" src="../../images/icons/search.gif" width="16"></a>
</td>
</tr>
<tr align="left" valign="top">
<td colspan="2">
<hr>
<b>Chapter 1	:&nbsp;&nbsp;ColdFusion Tags</b>
</td>
</tr>
</table>
</div>
<br>
<br>

<br>
<a name="1973845"></a>
 <H1>CFTRY&#32;CFCATCH</H1>



<p>Used with one or more CFCATCH tags, the CFTRY tag allows developers to catch and process exceptions in ColdFusion pages. Exceptions include any event that disrupts the normal flow of instructions in a ColdFusion page such as failed database operations, missing include files, and developer-specified events.</p><a name="1973847"></a>
 
<H3>Syntax</H3>
<PRE>&lt;CFTRY&gt;
... Add code here
&lt;CFCATCH TYPE="exceptiontype"&gt;
... Add exception processing code here
&lt;/CFCATCH&gt;
... Additional CFCATCH blocks go here
&lt;/CFTRY&gt;
</PRE><a name="1973849"></a>
<h4> TYPE</h4>
<p>Optional. Specifies the type of exception to be handled by the CFCATCH block:</p><ul>
<a name="1973851"> </a>
<li>APPLICATION (default)

<a name="1973852"> </a>
</li>
<li>Database
<a name="1973853"> </a>
</li>
<li>Template
<a name="1973854"> </a>
</li>
<li>Security
<a name="1973855"> </a>
</li>
<li>Object
<a name="1973856"> </a>
</li>
<li>MissingInclude
<a name="1973857"> </a>
</li>
<li>Expression
<a name="1973858"> </a>
</li>
<li>Lock
<a name="1973859"> </a>
</li>
<li>Custom_type
<a name="1973860"> </a>
</li>
<li>Any (default)
</li>
</ul>
<a name="1973861"></a>
 
<H3>Usage</H3>
<p>You must code at least one CFCATCH tag within a CFTRY block. Code CFCATCH tags at the end of the CFTRY block. ColdFusion tests CFCATCH tags in the order in which they appear on the page. </p><p>If you specify the type to be ANY, do so in the last CFCATCH tag in the block so that all of the other tests are executed first. </p><div>
<table>
<tr valign="top">
<td width="30"><strong>Note	</strong></td>
<td>Specifying the type as ANY causes the ColdFusion Application Server to 
catch exceptions from any CFML tag, data source, or external object, 
which your application may not be prepared to handle.
</td>
</tr>
</table>
</div>
<br><p>Applications can optionally use the CFTHROW tag to raise custom exceptions. Such exceptions are caught with any of the following type specifications: </p><ul>
<a name="1973867"> </a>
<li>        TYPE="<em>custom_type" </em>

<a name="1973868"> </a>
</li>
<li>        TYPE="APPLICATION" 
<a name="1973869"> </a>
</li>
<li>        TYPE="ANY". 
</li>
</ul>
<p>The <em>custom_type</em> type designates the name of a user-defined type specified with a CFTHROW tag. CFCATCH has a catch handler that can catch a custom type by pattern, providing the custom type is defined as a series of strings concatenated together by periods, as in &quot;MyApp.BusinessRuleException.InvalidAccount&quot;. CFCATCH searches for a custom type match starting with the most specific and ending with the least specific. For example, you could define a type as follows:</p><pre>    &lt;CFTHROW TYPE=&quot;MyApp.BusinessRuleException.InvalidAccount&quot;&gt;
</pre><p>CFCATCH first searches for the entire type string defined in the CFTHROW tag, as follows:</p><pre>    &lt;CFCATCH TYPE=&quot;MyApp.BusinessRuleException.InvalidAccount&quot;&gt; 
</pre><p>Then it searches for the next most specific:</p><pre>    &lt;CFCATCH TYPE=&quot;MyApp.BusinessRuleException&quot;&gt; 
</pre><p>Finally, it searches for the least specific:</p><pre>    &lt;CFCATCH TYPE=&quot;MyApp&quot;&gt; 
</pre><p>The order in which you code CFCATCH tags designed to catch a custom exception type within an application does not matter. A CFCATCH tag searches for the custom exception types from most specific to least specific.</p><p>If you specify the type to be "APPLICATION, " the CFCATCH tag catches only those custom exceptions that have been specified as having the APPLICATION type in the CFTHROW tag that defines them.</p><p>The tags that throw an exception of TYPE="TEMPLATE" are CFINCLUDE, CFMODULE, and CFERROR.</p><p>An exception raised within a CFCATCH block cannot be handled by the CFTRY block that immediately encloses the CFCATCH tag. However, you can rethrow the currently active exception by using the <a href="../2_ColdFusion_Tags/lr2_081.htm#2272750">CFRETHROW</a> tag.</p><p>You can use the CFCATCH variable to access exception information:</p><ul>
<a name="1973875"> </a>
<li>Type -- Exception type, as specified in CFCATCH.

<a name="1973876"> </a>
</li>
<li>Message -- The exception's diagnostic message, if one was provided. If no diagnostic message is available, this is an empty string. 
<a name="1973877"> </a>
</li>
<li>Detail -- A detailed message from the CFML interpreter. This message, which contains HTML formatting, can help determine which tag threw the exception.
<a name="1973878"> </a>
</li>
<li>TagContext -- The tag stack: the name and position of each tag in the tag stack, and the full path names of the files that contain the tags in the tag stack. See the note that follows this list for more information.
<a name="1973879"> </a>
</li>
<li>NativeErrorCode -- TYPE=Database only. The native error code associated with this exception. Database drivers typically provide error codes to assist diagnosis of failing database operations. If no error code was provided, the value of NativeErrorCode is -1. 
<a name="1973880"> </a>
</li>
<li>SQLSTATE -- TYPE=Database only. The SQLState associated with this exception. Database drivers typically provide error codes to assist diagnosis of failing database operations. If no SQLState value was provided, the value of SQLSTATE is -1. 
<a name="1973881"> </a>
</li>
<li>ErrNumber -- TYPE=Expression only. Internal expression error number.
<a name="1973882"> </a>
</li>
<li>MissingFileName -- TYPE=MissingInclude only. Name of the file that could not be included.
<a name="1973883"> </a>
</li>
<li>LockName -- TYPE=Lock only. The name of the affected lock (set to anonymous if the lock was unnamed).
<a name="1973884"> </a>
</li>
<li>LockOperation -- TYPE=Lock only. The operation that failed (set to Timeout, Create Mutex, or Unknown).
<a name="1973885"> </a>
</li>
<li>ErrorCode -- TYPE=Custom type only. A string error code.
<a name="1973886"> </a>
</li>
<li>ExtendedInfo -- TYPE=APPLICATION and custom only. A custom error message.
</li>
</ul>
<div>
<table>
<tr valign="top">
<td width="30"><strong>Note	</strong></td>
<td>In order to see the tag stack displayed by TagContext, use the ColdFusion 
Administrator to enable the CFML stack trace.Under Debugging in the 
ColdFusion Administrator, choose the checkbox next to "Enable CFML 
stack trace. "
</td>
</tr>
</table>
</div>
<br><a name="2045640"></a>
 
<H3>Example</H3>
<FORM ACTION="../../tagframe.cfm" TARGET="runcftag">
<INPUT TYPE="Hidden" NAME="tagname" VALUE="cftry
">
<INPUT TYPE="Submit" VALUE="Example">
</FORM><pre>&lt;!--- CFTRY example, using TagContext to display the tag stack. ---&gt;
&lt;HTML&gt;

&lt;HEAD&gt;
&lt;TITLE&gt;
CFTRY Example
&lt;/TITLE&gt;
&lt;/HEAD&gt;

&lt;BASEFONT FACE="Arial, Helvetica" SIZE=2&gt;

&lt;BODY  bgcolor="#FFFFD5"&gt;

&lt;H3&gt;CFTRY Example&lt;/H3&gt;

&lt;!--- open a CFTRY block ---&gt;
&lt;CFTRY&gt;

&lt;!--- note that we have misspelled the tablename
"employees" as "employeeas" ---&gt;
&lt;CFQUERY NAME="TestQuery" DATASOURCE="cfsnippets"&gt;
SELECT *
FROM EMPLOYEEAS
&lt;/CFQUERY&gt;

&lt;P&gt;... other processing goes here

&lt;!--- specify the type of error for which we are fishing ---&gt;
&lt;CFCATCH TYPE="Database"&gt;
&lt;!--- the message to display ---&gt;
    &lt;H3&gt;You've Thrown a Database &lt;B&gt;Error&lt;/B&gt;&lt;/H3&gt;
&lt;CFOUTPUT&gt;
&lt;!--- and the diagnostic message from the ColdFusion server ---&gt;
    &lt;P&gt;#CFCATCH.message#&lt;/P&gt;
    &lt;P&gt;Caught an exception, type = #CFCATCH.TYPE# &lt;/P&gt;
    &lt;P&gt;The contents of the tag stack are:&lt;/P&gt;
    &lt;CFLOOP index=i from=1 to = #ArrayLen(CFCATCH.TAGCONTEXT)#&gt;
          &lt;CFSET sCurrent = #CFCATCH.TAGCONTEXT[i]#&gt;
              &lt;BR&gt;#i# #sCurrent["ID"]# 
(#sCurrent["LINE"]#,#sCurrent["COLUMN"]#) #sCurrent["TEMPLATE"]#
    &lt;/CFLOOP&gt;
&lt;/CFOUTPUT&gt;
&lt;/CFCATCH&gt;

&lt;/CFTRY&gt;

&lt;/BODY&gt;
&lt;/HTML&gt;       
</pre><FORM ACTION="../../tagframe.cfm" TARGET="runcftag">
<INPUT TYPE="Hidden" NAME="tagname" VALUE="cftry
">
<INPUT TYPE="Submit" VALUE="Example">
</FORM>
<br>

<div class="navigation">
<table>
<tr valign="bottom">
<td class="copy" width="90%" align="left" valign="bottom" nowrap>
Copyright &#169; 1999, Allaire Corporation. All rights reserved.
</td>
<td align="right" width="10%" valign="bottom" nowrap>
<a href="../2_ColdFusion_Tags/lr2_100.htm"><IMG alt="Previous" border="0" height="16" src="../../images/icons/back.gif" width="16"></a>
<a href="../2_ColdFusion_Tags/lr2.htm"><IMG alt="Up" border="0" height="16" src="../../images/icons/uplevel.gif" width="16"></A>
<a href="../2_ColdFusion_Tags/lr2_102.htm"><IMG alt="Next" border="0" height="16" src="../../images/icons/next.gif" width="16"></a>
<a href="../../dochome.htm"><IMG alt="Home" border="0" height="16" src="../../images/icons/home.gif" width="16"></a>
<a href="javascript: makeRemote();"><IMG alt="Search" border="0" height="16" src="../../images/icons/search.gif" width="16"></a>
</td>
</tr>
</table>
</div>
<!-- Last updated: 10/29/99 10:39:45 -->
</body>
</html>