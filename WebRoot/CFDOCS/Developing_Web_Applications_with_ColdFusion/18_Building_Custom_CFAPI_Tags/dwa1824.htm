<html>
<head>
<SCRIPT language="Javascript">

var DocRemote = 0;

function makeRemote(){

	if(DocRemote){
		if(DocRemote.closed){
			DocRemote = 0;
			makeRemote();
		}else{
			DocRemote.focus();
		}
	}else{
		DocRemote = window.open('../../search.cfm', 
					    'Search', 
					    'scrollbars,resizable,width=510,height=300');
    	}
}

</SCRIPT>
<script language="JavaScript">
<!--Hide JavaScript

   if (navigator.appName == "Netscape"){
      document.write('<LINK REL=STYLESHEET HREF="../../allaire_ns.css" TYPE="text/css">');
      }
   else{
      document.write('<LINK REL=STYLESHEET HREF="../../allaire_ie.css" TYPE="text/css">');
   }
//-->
</script>
<title>Interface Response</title>
</head>
<body>

<div class="navigation">
<table>
<tr valign="bottom">
<td width="90%" align="left" valign="bottom" nowrap><em>Developing Web Applications with ColdFusion</em>
</td>
<td align="right" width="10%" valign="bottom" nowrap>
<a href="../18_Building_Custom_CFAPI_Tags/dwa1823.htm"><IMG alt="Previous" border="0" height="16" src="../../images/icons/back.gif" width="16"></a>
<a href="../18_Building_Custom_CFAPI_Tags/dwa18.htm"><IMG alt="Up One Level" border="0" height="16" src="../../images/icons/uplevel.gif" width="16"></A>
<a href="../19_Using_CFOBJECT_to_Invoke_Component_Objects/dwa19.htm"><IMG alt="Next" border="0" height="16" src="../../images/icons/next.gif" width="16"></a>
<a href="../../dochome.htm"><IMG alt="" border="0" height="16" src="../../images/icons/home.gif" width="16"></a>
<a href="javascript: makeRemote();"><IMG alt="Search" border="0" height="16" src="../../images/icons/search.gif" width="16"></a>
</td>
</tr>
<tr align="left" valign="top">
<td colspan="2">
<hr>
<b>Chapter 18	:&nbsp;&nbsp;Building Custom CFAPI Tags</b>
</td>
</tr>
</table>
</div>
<br>
<br>

<br>
<a name="1021714"></a>
 <H1>Interface Response</H1>



<pre>public abstract interface Response
</pre><p>Interface to response generated from a CustomTag. This interface includes 
methods for writing output, generating queries, and setting variables within the 
calling page. <div> 
<table border="1" cellpadding="3" cellspacing="0">
<caption></caption>
<tr valign="top"><th colspan=3 rowspan=1>
<strong>Method Summary</strong>
</th></tr>
<tr valign="top"><td valign="top"><PRE>Query
</PRE></td><td valign="top"><PRE>addQuery(String name, String[] 
columns) 
</PRE></td><td valign="top">
Adds a query to the calling template.
</td></tr>
<tr valign="top"><td valign="top"><PRE>void
</PRE></td><td valign="top"><PRE>setVariable(String name, String value) 
</PRE></td><td valign="top">
Sets a variable in the calling template.
</td></tr>
<tr valign="top"><td valign="top"><PRE>void
</PRE></td><td valign="top"><PRE>write(String output) 
</PRE></td><td valign="top">
Outputs text back to the user.
</td></tr>
<tr valign="top"><td valign="top"><PRE>void
</PRE></td><td valign="top"><PRE>writeDebug(String output) 
</PRE></td><td valign="top">
Writes text output into the debug stream.
</td></tr>

</table>
</div>

</p><a name="1021827"></a>
 
<H2>Method Detail</H2>
<a name="1021921"></a>
 
<H3>write</H3>
<pre>public void write(String output)
</pre><p>Outputs text back to the user. 
</p><p>The following example outputs the value of the DESTINATION attribute: 
</p><pre>   response.write( "DESTINATION = " + 
request.getAttribute("DESTINATION") ) ;
</pre><a name="1021832"></a>
<h4> Parameters: </h4>
<p><code>output</code> -- Text to output
</p><a name="1021837"></a>
 
<H3>setVariable</H3>
<pre>public void setVariable(String name,
                        String value)
                 throws IllegalArgumentException
</pre><p>Sets a variable in the calling template. If the variable name specified already exists 
in the template then its value is replaced. If it does not already exist then a new 
variable is created. 
</p><p>For example, this code sets the value of a variable named 'MessageSent' based on 
the success of an operation performed by the custom tag: 
</p><pre>   boolean bMessageSent ;

   ...attempt to send the message...

   if ( bMessageSent == true )
   {
      response.setVariable( "MessageSent", "Yes" ) ;
   }
   else
   {
      response.setVariable( "MessageSent", "No" ) ;
   } 
</pre><a name="1021855"></a>
<h4> Parameters: </h4>
<p><code>name</code> -- The name of the variable to set 
</p><p><code>value</code> -- The value to set variable to 
</p><a name="1021858"></a>
<h4> Throws: </h4>
<p><code>IllegalArgumentException</code> -- If the name parameter is not a valid CFML 
variable name
</p><a name="1021863"></a>
 
<H3>addQuery</H3>
<pre>public Query addQuery(String name,
                      String[] columns)
               throws IllegalArgumentException
</pre><p>Adds a query to the calling template. This query can then be accessed by CFML 
tags within the template. Note that after calling addQuery the query exists but is 
empty (i.e. it has 0 rows). To populate the query with data you should call the     
Query member functions     addRow and     setData. 
</p><p>The following example adds a Query named 'People' to the calling template. The 
query has two columns ('FirstName' and 'LastName') and 2 rows:
</p><pre>   // Create string array with column names (also track columns 
indexes)
   String[] columns = { "FirstName", "LastName" } ;
   int iFirstName = 1, iLastName = 2 ;

   // Create a query which contains these columns
   Query query = response.addQuery( "People", columns ) ;
                    
   // Add data to the query
   int iRow = query.addRow() ;
   query.setData( iRow, iFirstName, "John" ) ;
   query.setData( iRow, iLastName, "Smith" ) ;
   iRow = query.addRow() ;
   query.setData( iRow, iFirstName, "Jane" ) ;
   query.setData( iRow, iLastName, "Doe" ) ; 
</pre><a name="1021883"></a>
<h4> Parameters: </h4>
<p><code>name</code> -- The name of the query to add to the template 
</p><p><code>columns</code> -- The column names to be used in the query 
</p><a name="1021886"></a>
<h4> Returns: </h4>
<p>The Query that was added to the template. 
</p><a name="1021888"></a>
<h4> Throws: </h4>
<p>IllegalArgumentException - if the name parameter is not a valid CFML variable 
name 
</p><a name="1021890"></a>
<h4> See Also: </h4>
<pre>Query.addRow,     Query.setData
</pre><a name="1021895"></a>
 
<H3>writeDebug</H3>
<pre>public void writeDebug(String output)
</pre><p>Writes text output into the debug stream. This text is only displayed to the end-
user if the tag contains the DEBUG attribute (you can check for this attribute using 
the     Request.debug member function). 
</p><p>The following example checks to see whether the DEBUG attribute is present, and 
if it is then it writes a brief debug message: 
</p><pre>   if ( request.debug() )
   {
      response.writeDebug( "debug info" ) ;
   } 
</pre><a name="1021903"></a>
<h4> Parameters: </h4>
<p><code>output</code> -- The text to output 
</p><a name="1021905"></a>
<h4> See Also: </h4>
<pre>Request.debug
</pre><p></p>
<br>

<div class="navigation">
<table>
<tr valign="bottom">
<td class="copy" width="90%" align="left" valign="bottom" nowrap>
Copyright &#169; 1999, Allaire Corporation. All rights reserved.
</td>
<td align="right" width="10%" valign="bottom" nowrap>
<a href="../18_Building_Custom_CFAPI_Tags/dwa1823.htm"><IMG alt="Previous" border="0" height="16" src="../../images/icons/back.gif" width="16"></a>
<a href="../18_Building_Custom_CFAPI_Tags/dwa18.htm"><IMG alt="Up" border="0" height="16" src="../../images/icons/uplevel.gif" width="16"></A>
<a href="../19_Using_CFOBJECT_to_Invoke_Component_Objects/dwa19.htm"><IMG alt="Next" border="0" height="16" src="../../images/icons/next.gif" width="16"></a>
<a href="../../dochome.htm"><IMG alt="Home" border="0" height="16" src="../../images/icons/home.gif" width="16"></a>
<a href="javascript: makeRemote();"><IMG alt="Search" border="0" height="16" src="../../images/icons/search.gif" width="16"></a>
</td>
</tr>
</table>
</div>
<!-- Last updated: 10/27/99 18:20:03 -->
</body>
</html>